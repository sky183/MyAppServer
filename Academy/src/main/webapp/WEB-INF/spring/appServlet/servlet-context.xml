<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Dispatcher
 Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>
			<!-- @ResponseBody로 String 처리할때 한글처리 -->
			<beans:bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html;charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 리소스 맵핑 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/img/**" location="/img/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 파일업로드 관련 -->
	<beans:bean id="
"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<context:component-scan
		base-package="com.sb.academy" />


	<!-- JDBC 설정 -->
	<beans:bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- <beans:property name="driverClass" value="com.mysql.jdbc.Driver" /> 
			<beans:property name="jdbcUrl" value="jdbc:mysql://sb-mall.cu5prbfi9jue.ap-northeast-2.rds.amazonaws.com/SB_Master?useSSL=false&amp;characterEncoding=utf8" 
			/> -->
		<beans:property name="driverClass"
			value="net.sf.log4jdbc.DriverSpy" />
		<beans:property name="jdbcUrl"
			value="jdbc:mysql://localhost/mina?characterEncoding=utf8" />

		<beans:property name="user" value="root" />
		<beans:property name="password" value="1234" />
	</beans:bean>

	<!-- 콘솔 로그찍기 -->
	<beans:bean id="dataSource_log"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<beans:constructor-arg ref="dataSource" />
		<beans:property name="logFormatter">
			<beans:bean
				class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<beans:property name="loggingType" value="MULTI_LINE" />
				<beans:property name="sqlPrefix" value="SQL::: " />
			</beans:bean>
		</beans:property>
	</beans:bean>


	<!-- PlatformTransactionManager 빈 설정 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<!-- @Transactional 애노테이션 활성화 설정 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- SqlSessionTemplate 등록 -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>
	<!-- spring - mybatis 연동설정 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations">
			<beans:list>
				<beans:value>classpath:com/sb/academy/hire/dao/*.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- loginInterceptor 관련 -->
	<!-- <interceptors> -->

	<!-- <interceptor> -->
	<!-- <mapping path="/store/**" /> -->
	<!-- <exclude-mapping path="/member/find/**" /> -->

	<!-- <beans:bean -->
	<!-- class="com.sb.mall.home.interceptor.AuthCheckInterceptor" /> -->
	<!-- </interceptor> -->

	<!-- </interceptors> -->

	<!-- <<의존설정을 위해 빈객체 등록>> -->
	<!-- 암호화 -->
<!-- 	<beans:bean id="sha256" -->
<!-- 		class="com.sb.mall.member.service.Sha256"></beans:bean> -->

	<!-- 복호화 -->
<!-- 	<beans:bean id="aES256Util" -->
<!-- 		class="com.sb.mall.member.service.AES256Util"> -->
		<!-- 키의 길이가 16자리 설정 노출위험이 있어서 클래스 내에서 직접 설정하는것을 권장 -->
		<!-- <beans:constructor-arg value="0000000000000000" /> -->
<!-- 	</beans:bean> -->



</beans:beans>
